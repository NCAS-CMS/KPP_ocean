# Makefile for the 3D KPP boundary-layer ocean model
# Written by Nicholas P. Klingaman
# University of Reading, Department of Meteorology and NCAS-Climate
# Substantially revised on 03 Sept. 2009 to remove separate dot files for each target

# NOTE: You *must* run <make clean> if you wish to recompile the model for another target
# (e.g., if you have compiled for OASIS2 and wish to recompile for OASIS3, you must run <make clean> first,
# then run <make oasis3_coupled>.)

# Fortran compiler
F90=gfortran
# C Preprocessor
CPP=cpp
# Flags for the Fortran compiler
F90_FLAGS=-Wall -fopenmp -cpp -O3 -fdefault-real-8 -I.
# Extra flag required to pass CPP macros through the Fortran compiler - currently required for only XLF.
F90_CPP_FLAG=
# Oasis 2 static library
OASIS2_LIB=/home/pappas/src/oasis_2.4.1_pathscale/lib/clim/src_MPI1/climmpi1.a
# Oasis 3 static library
OASIS3_LIB=
# NetCDF dynamic libraries
NCDF_LIB=-L/usr/lib64 -lnetcdf -lnetcdff
# NetCDF include files
NCDF_INC=-I/usr/include
# MPI (or OpenMPI) include files
MPI_INC=-I/usr/lib/openmpi/include
# MPI dynamic libraries
MPI_LIB=-L/usr/lib/openmpi/lib -lmpi -lmpi_f77
# CFS dynamic libraries
CFS_LIB=-L/home/pappas/src/w3lib-1.6 -lw3

# Name of the KPP executable
EXECUTABLE=KPP_ocean

# -- No user modifications beyond this point --

#FORCED_FILES = steves_3D_ocn.f steves_fluxes.f subs1D.f ncdf_in.f ncdf_out.f \
#	ocn.f 3D_netcdf.f init.f kpp.f vmix.f kpp_timer.f kpp_derived_trans.f

FORCED_FILES = mc-kpp_driver.f90 mc-kpp_initialize.f90 mc-kpp_output_inst.f90 mc-kpp_output_mean.f90 mc-kpp_output_range.f90 \
	mc-kpp_output_initialize.f90 mc-kpp_initialize_constants.f90 mc-kpp_initialize_geography.f90 mc-kpp_initialize_landsea.f90 \
	mc-kpp_initialize_couplingweight.f90 mc-kpp_initialize_optics.f90 mc-kpp_initialize_relaxation.f90 mc-kpp_initialize_ocean.f90 \
	mc-kpp_initialize_advection.f90	mc-kpp_netcdf_subs.f90 mc-kpp_reformat_mask_output.f90 mc-kpp_abort.f90 mc-kpp_output_control.f90 \
	mc-kpp_types_transfer.f90 mc-kpp_initialize_fluxes.f90 mc-kpp_physics_stateequations.f90 mc-kpp_physics_lookup.f90 mc-kpp_physics_overrides.f90 \
	mc-kpp_read_sst.f90 mc-kpp_read_ice.f90 mc-kpp_read_heatcorrections.f90 mc-kpp_read_saltcorrections.f90 mc-kpp_read_temperatures.f90 \
	mc-kpp_read_salinity.f90 mc-kpp_restart_io.f90 mc-kpp_fluxes_update.f90 mc-kpp_read_fluxes.f90 mc-kpp_fluxes_ntflux.f90 \
	mc-kpp_boundary_update.f90 mc-kpp_boundary_interpolate.f90 mc-kpp_physics_driver.f90 mc-kpp_physics_ocnstep.f90 mc-kpp_physics_ocnint.f90 \
	mc-kpp_physics_solvers.f90 mc-kpp_physics_verticalmixing.f90 mc-kpp_physics_swfrac_opt.f90 mc-kpp_physics_verticalmixing_bldepth.f90 \
	mc-kpp_physics_verticalmixing_wscale.f90 mc-kpp_physics_verticalmixing_blmix.f90 mc-kpp_physics_verticalmixing_rimix.f90 \
	mc-kpp_physics_verticalmixing_enhance.f90 mc-kpp_physics_verticalmixing_kppmix.f90 mc-kpp_physics_verticalmixing_z121.f90 \
	mc-kpp_physics_verticalmixing_ddmix.f90 mc-kpp_restart_control.f90

OASIS2_COUPLED_FILES = $(FORCED_FILES)
OASIS3_COUPLED_FILES = $(OASIS2_COUPLED_FILES) mc-kpp_coupling_oasis3.f90
CFS_COUPLED_FILES = $(FORCED_FILES) couple_io_cfs.f

FORCED_OBJS = $(FORCED_FILES:.f90=.o)
OASIS2_COUPLED_OBJS = $(OASIS2_COUPLED_FILES:.f90=.o)
OASIS3_COUPLED_OBJS = $(OASIS3_COUPLED_FILES:.f90=.o)
CFS_COUPLED_OBJS = $(CFS_COUPLED_FILES:.f=.o)
GFS_FORCED_OBJS = $(FORCED_OBJS)

FORCED_LINK = $(F90) $(F90_FLAGS) $(FORCED_OBJS) -o ${EXECUTABLE} ${NCDF_INC} ${NCDF_LIB}
OASIS2_COUPLED_LINK = $(F90) $(OASIS2_COUPLED_OBJS) ${OASIS2_LIB} -o ${EXECUTABLE} ${MPI_LIB} ${MPI_INC} ${NCDF_INC} ${NCDF_LIB}
OASIS3_COUPLED_LINK = $(F90) $(OASIS3_COUPLED_OBJS) ${OASIS3_LIB} -o ${EXECUTABLE} ${MPI_LIB} ${MPI_INC} ${NCDF_INC} ${NCDF_LIB}
CFS_COUPLED_LINK = $(F90) $(CFS_COUPLED_OBJS) -o $(EXECUTABLE) $(CFS_LIB) $(NCDF_INC) $(NCDF_LIB)
GFS_FORCED_LINK = $(F90) $(GFS_FORCED_OBJS) -o $(EXECUTABLE) $(CFS_LIB) $(NCDF_INC) $(NCDF_LIB)		

.SUFFIXES:
.SUFFIXES: .f90 .o

.f90.o :
	$(F90) $(F90_FLAGS) $(CPP_FLAGS) $(NCDF_INC) $(MPI_INC) -c $< -o ${<:.f90=.o}

forced : CPP_FLAGS=$(F90_CPP_FLAG)-DOPENMP 
forced : $(FORCED_OBJS)
	$(FORCED_LINK)

cfs_coupled : CPP_FLAGS=$(F90_CPP_FLAG)-DCFS $(F90_CPP_FLAG)-DCOUPLE
cfs_coupled : $(CFS_COUPLED_OBJS)
	$(CFS_COUPLED_LINK)

gfs_forced : CPP_FLAGS=$(F90_CPP_FLAG)-DCFS
gfs_forced : $(GFS_FORCED_OBJS)
	$(GFS_FORCED_LINK)

oasis2_coupled : CPP_FLAGS=$(F90_CPP_FLAG)-DOASIS2 $(F90_CPP_FLAG)-DCOUPLE
oasis2_coupled : $(OASIS2_COUPLED_OBJS)
	$(OASIS2_COUPLED_LINK)

oasis3_coupled : CPP_FLAGS=$(F90_CPP_FLAG)-DOASIS3 $(F90_CPP_FLAG)-DCOUPLE
oasis3_coupled : $(OASIS3_COUPLED_OBJS)
	$(OASIS3_COUPLED_LINK)

clean : 
	rm -rf *.o $(EXECUTABLE)

obj_clean : 
	rm -rf *.o
